/*
 * Created on 28 juin 2013 ( Time 18:59:52 )
 * Generated by Telosys Tools Generator ( version 2.0.5 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.demo.bean;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;


import java.util.List;
import javax.persistence.*;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 * Persistent class for entity stored in table "SHOP"
 *
 * @author Telosys Tools Generator
 *
 */
@XmlRootElement  // JAXB annotation for REST Web Services
@XmlAccessorType(XmlAccessType.PROPERTY) // JAXB accessor = getter/setter pair
@Entity
@Table(name="SHOP", schema="ROOT" )
// Define named queries here
// @NamedQueries ( {
//  @NamedQuery ( name="Shop.query1", query="SELECT x FROM Shop x WHERE  " ),
//  @NamedQuery ( name="Shop.query2", query="SELECT x FROM Shop x WHERE  " )
// } )
public class Shop implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="CODE", nullable=false, length=3)
    private String     code         ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="NAME", length=80)
    private String     name         ;

    @Column(name="ADDRESS_1", length=80)
    private String     address1     ;

    @Column(name="ADDRESS_2", length=80)
    private String     address2     ;

    @Column(name="ZIP_CODE")
    private Integer    zipCode      ;

    @Column(name="CITY", length=45)
    private String     city         ;

    @Column(name="PHONE", length=14)
    private String     phone        ;

    @Column(name="EMAIL", length=50)
    private String     email        ;

	// "countryCode" (column "COUNTRY_CODE") is not defined by itself because used as FK in a link 
	// "executive" (column "EXECUTIVE") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="EXECUTIVE", referencedColumnName="CODE", insertable=false, updatable=false)
    private Employee   employee    ;

    @OneToMany(mappedBy="shop", targetEntity=BookOrder.class)
    private List<BookOrder> listOfBookOrder;

    @OneToMany(mappedBy="shop", targetEntity=Employee.class)
    private List<Employee> listOfEmployee;

    @ManyToOne
    @JoinColumn(name="COUNTRY_CODE", referencedColumnName="CODE", insertable=false, updatable=false)
    private Country    country     ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public Shop()
    {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setCode( String code )
    {
        this.code = code ;
    }
    public String getCode()
    {
        return this.code;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : NAME ( VARCHAR ) 
    public void setName( String name )
    {
        this.name = name;
    }
    public String getName()
    {
        return this.name;
    }

    //--- DATABASE MAPPING : ADDRESS_1 ( VARCHAR ) 
    public void setAddress1( String address1 )
    {
        this.address1 = address1;
    }
    public String getAddress1()
    {
        return this.address1;
    }

    //--- DATABASE MAPPING : ADDRESS_2 ( VARCHAR ) 
    public void setAddress2( String address2 )
    {
        this.address2 = address2;
    }
    public String getAddress2()
    {
        return this.address2;
    }

    //--- DATABASE MAPPING : ZIP_CODE ( INTEGER ) 
    public void setZipCode( Integer zipCode )
    {
        this.zipCode = zipCode;
    }
    public Integer getZipCode()
    {
        return this.zipCode;
    }

    //--- DATABASE MAPPING : CITY ( VARCHAR ) 
    public void setCity( String city )
    {
        this.city = city;
    }
    public String getCity()
    {
        return this.city;
    }

    //--- DATABASE MAPPING : PHONE ( VARCHAR ) 
    public void setPhone( String phone )
    {
        this.phone = phone;
    }
    public String getPhone()
    {
        return this.phone;
    }

    //--- DATABASE MAPPING : EMAIL ( VARCHAR ) 
    public void setEmail( String email )
    {
        this.email = email;
    }
    public String getEmail()
    {
        return this.email;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setEmployee( Employee employee )
    {
        this.employee = employee;
    }
    public Employee getEmployee()
    {
        return this.employee;
    }

    @XmlTransient
    public void setListOfBookOrder( List<BookOrder> listOfBookOrder )
    {
        this.listOfBookOrder = listOfBookOrder;
    }
    public List<BookOrder> getListOfBookOrder()
    {
        return this.listOfBookOrder;
    }

    @XmlTransient
    public void setListOfEmployee( List<Employee> listOfEmployee )
    {
        this.listOfEmployee = listOfEmployee;
    }
    public List<Employee> getListOfEmployee()
    {
        return this.listOfEmployee;
    }

    public void setCountry( Country country )
    {
        this.country = country;
    }
    public Country getCountry()
    {
        return this.country;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString()
    {
        StringBuffer sb = new StringBuffer(); 
        sb.append(code); 
        sb.append("|"); 
        sb.append(name); 
        sb.append( "|" ); 
        sb.append(address1); 
        sb.append( "|" ); 
        sb.append(address2); 
        sb.append( "|" ); 
        sb.append(zipCode); 
        sb.append( "|" ); 
        sb.append(city); 
        sb.append( "|" ); 
        sb.append(phone); 
        sb.append( "|" ); 
        sb.append(email); 
        return sb.toString(); 
    }

}
