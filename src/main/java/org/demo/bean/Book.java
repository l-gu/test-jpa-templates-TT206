/*
 * Created on 28 juin 2013 ( Time 18:59:52 )
 * Generated by Telosys Tools Generator ( version 2.0.5 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.demo.bean;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.math.BigDecimal;

import java.util.List;
import javax.persistence.*;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;

/**
 * Persistent class for entity stored in table "BOOK"
 *
 * @author Telosys Tools Generator
 *
 */
@XmlRootElement  // JAXB annotation for REST Web Services
@XmlAccessorType(XmlAccessType.PROPERTY) // JAXB accessor = getter/setter pair
@Entity
@Table(name="BOOK", schema="ROOT" )
// Define named queries here
// @NamedQueries ( {
//  @NamedQuery ( name="Book.query1", query="SELECT x FROM Book x WHERE  " ),
//  @NamedQuery ( name="Book.query2", query="SELECT x FROM Book x WHERE  " )
// } )
public class Book implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="ID", nullable=false)
    private int        id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="PUBLISHER_ID", nullable=false)
    private int        publisherId  ;

    @Column(name="AUTHOR_ID", nullable=false)
    private int        authorId     ;

    @Column(name="ISBN", nullable=false, length=13)
    private String     isbn         ;

    @Column(name="TITLE", length=160)
    private String     title        ;

    @Column(name="PRICE")
    private BigDecimal price        ;

    @Column(name="QUANTITY")
    private Integer    quantity     ;

    @Column(name="DISCOUNT")
    private Integer    discount     ;

    @Column(name="AVAILABILITY")
    private Short      availability ;

    @Column(name="BEST_SELLER")
    private Short      bestSeller   ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public Book()
    {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( int id )
    {
        this.id = id ;
    }
    public int getId()
    {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : PUBLISHER_ID ( INTEGER ) 
    public void setPublisherId( int publisherId )
    {
        this.publisherId = publisherId;
    }
    public int getPublisherId()
    {
        return this.publisherId;
    }

    //--- DATABASE MAPPING : AUTHOR_ID ( INTEGER ) 
    public void setAuthorId( int authorId )
    {
        this.authorId = authorId;
    }
    public int getAuthorId()
    {
        return this.authorId;
    }

    //--- DATABASE MAPPING : ISBN ( VARCHAR ) 
    public void setIsbn( String isbn )
    {
        this.isbn = isbn;
    }
    public String getIsbn()
    {
        return this.isbn;
    }

    //--- DATABASE MAPPING : TITLE ( VARCHAR ) 
    public void setTitle( String title )
    {
        this.title = title;
    }
    public String getTitle()
    {
        return this.title;
    }

    //--- DATABASE MAPPING : PRICE ( DECIMAL ) 
    public void setPrice( BigDecimal price )
    {
        this.price = price;
    }
    public BigDecimal getPrice()
    {
        return this.price;
    }

    //--- DATABASE MAPPING : QUANTITY ( INTEGER ) 
    public void setQuantity( Integer quantity )
    {
        this.quantity = quantity;
    }
    public Integer getQuantity()
    {
        return this.quantity;
    }

    //--- DATABASE MAPPING : DISCOUNT ( INTEGER ) 
    public void setDiscount( Integer discount )
    {
        this.discount = discount;
    }
    public Integer getDiscount()
    {
        return this.discount;
    }

    //--- DATABASE MAPPING : AVAILABILITY ( SMALLINT ) 
    public void setAvailability( Short availability )
    {
        this.availability = availability;
    }
    public Short getAvailability()
    {
        return this.availability;
    }

    //--- DATABASE MAPPING : BEST_SELLER ( SMALLINT ) 
    public void setBestSeller( Short bestSeller )
    {
        this.bestSeller = bestSeller;
    }
    public Short getBestSeller()
    {
        return this.bestSeller;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString()
    {
        StringBuffer sb = new StringBuffer(); 
        sb.append(id); 
        sb.append("|"); 
        sb.append(publisherId); 
        sb.append( "|" ); 
        sb.append(authorId); 
        sb.append( "|" ); 
        sb.append(isbn); 
        sb.append( "|" ); 
        sb.append(title); 
        sb.append( "|" ); 
        sb.append(price); 
        sb.append( "|" ); 
        sb.append(quantity); 
        sb.append( "|" ); 
        sb.append(discount); 
        sb.append( "|" ); 
        sb.append(availability); 
        sb.append( "|" ); 
        sb.append(bestSeller); 
        return sb.toString(); 
    }

}
