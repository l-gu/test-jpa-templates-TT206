/*
 * Created on 2 juil. 2013 ( Time 09:44:49 )
 * Generated by Telosys Tools Generator ( version 2.0.5 )
 */
// This Bean has a composite Primary Key  


package org.demo.bean;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.math.BigDecimal;

import javax.persistence.*;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;

/**
 * Persistent class for entity stored in table "BOOK_ORDER_ITEM"
 *
 * @author Telosys Tools Generator
 *
 */
@XmlRootElement  // JAXB annotation for REST Web Services
@XmlAccessorType(XmlAccessType.PROPERTY) // JAXB accessor = getter/setter pair
@Entity
@Table(name="BOOK_ORDER_ITEM", schema="ROOT" )
// Define named queries here
// @NamedQueries ( {
//  @NamedQuery ( name="BookOrderItem.query1", query="SELECT x FROM BookOrderItem x WHERE  " ),
//  @NamedQuery ( name="BookOrderItem.query2", query="SELECT x FROM BookOrderItem x WHERE  " )
// } )
public class BookOrderItem implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( EMBEDDED IN AN EXTERNAL CLASS )  
    //----------------------------------------------------------------------
	@EmbeddedId
    private BookOrderItemKey compositePrimaryKey ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="QUANTITY", nullable=false)
    private int        quantity     ;

    @Column(name="PRICE", nullable=false)
    private BigDecimal price        ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="BOOK_ORDER_ID", referencedColumnName="ID", insertable=false, updatable=false)
    private BookOrder  bookOrder   ;

    @ManyToOne
    @JoinColumn(name="BOOK_ID", referencedColumnName="ID", insertable=false, updatable=false)
    private Book       book        ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public BookOrderItem()
    {
		super();
		this.compositePrimaryKey = new BookOrderItemKey();       
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE COMPOSITE KEY 
    //----------------------------------------------------------------------
    public void setBookOrderId( int bookOrderId )
    {
        this.compositePrimaryKey.setBookOrderId( bookOrderId ) ;
    }
    public int getBookOrderId()
    {
        return this.compositePrimaryKey.getBookOrderId() ;
    }
    public void setBookId( int bookId )
    {
        this.compositePrimaryKey.setBookId( bookId ) ;
    }
    public int getBookId()
    {
        return this.compositePrimaryKey.getBookId() ;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : QUANTITY ( INTEGER ) 
    public void setQuantity( int quantity )
    {
        this.quantity = quantity;
    }
    public int getQuantity()
    {
        return this.quantity;
    }

    //--- DATABASE MAPPING : PRICE ( DECIMAL ) 
    public void setPrice( BigDecimal price )
    {
        this.price = price;
    }
    public BigDecimal getPrice()
    {
        return this.price;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setBookOrder( BookOrder bookOrder )
    {
        this.bookOrder = bookOrder;
    }
    public BookOrder getBookOrder()
    {
        return this.bookOrder;
    }

    public void setBook( Book book )
    {
        this.book = book;
    }
    public Book getBook()
    {
        return this.book;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString()
    {
        StringBuffer sb = new StringBuffer(); 
        if ( compositePrimaryKey != null ) {  
            sb.append(compositePrimaryKey.toString());  
        }  
        else {  
            sb.append( "(null-key)" );  
        }  
        sb.append("|"); 
        sb.append(quantity); 
        sb.append( "|" ); 
        sb.append(price); 
        return sb.toString(); 
    }

}
