/*
 * Created on 28 juin 2013 ( Time 18:59:52 )
 * Generated by Telosys Tools Generator ( version 2.0.5 )
 */
// This Bean has a composite Primary Key  


package org.demo.bean;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;

/**
 * Persistent class for entity stored in table "REVIEW"
 *
 * @author Telosys Tools Generator
 *
 */
@XmlRootElement  // JAXB annotation for REST Web Services
@XmlAccessorType(XmlAccessType.PROPERTY) // JAXB accessor = getter/setter pair
@Entity
@Table(name="REVIEW", schema="ROOT" )
// Define named queries here
// @NamedQueries ( {
//  @NamedQuery ( name="Review.query1", query="SELECT x FROM Review x WHERE  " ),
//  @NamedQuery ( name="Review.query2", query="SELECT x FROM Review x WHERE  " )
// } )
public class Review implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( EMBEDDED IN AN EXTERNAL CLASS )  
    //----------------------------------------------------------------------
	@EmbeddedId
    private ReviewKey compositePrimaryKey ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="REVIEW_TEXT")
    private String     reviewText   ;

    @Column(name="REVIEW_NOTE")
    private Integer    reviewNote   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATION")
    private Date       creation     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LAST_UPDATE")
    private Date       lastUpdate   ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="BOOK_ID", referencedColumnName="ID", insertable=false, updatable=false)
    private Book       book        ;

    @ManyToOne
    @JoinColumn(name="CUSTOMER_CODE", referencedColumnName="CODE", insertable=false, updatable=false)
    private Customer   customer    ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public Review()
    {
		super();
		this.compositePrimaryKey = new ReviewKey();       
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE COMPOSITE KEY 
    //----------------------------------------------------------------------
    public void setCustomerCode( String customerCode )
    {
        this.compositePrimaryKey.setCustomerCode( customerCode ) ;
    }
    public String getCustomerCode()
    {
        return this.compositePrimaryKey.getCustomerCode() ;
    }
    public void setBookId( int bookId )
    {
        this.compositePrimaryKey.setBookId( bookId ) ;
    }
    public int getBookId()
    {
        return this.compositePrimaryKey.getBookId() ;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : REVIEW_TEXT ( LONG VARCHAR ) 
    public void setReviewText( String reviewText )
    {
        this.reviewText = reviewText;
    }
    public String getReviewText()
    {
        return this.reviewText;
    }

    //--- DATABASE MAPPING : REVIEW_NOTE ( INTEGER ) 
    public void setReviewNote( Integer reviewNote )
    {
        this.reviewNote = reviewNote;
    }
    public Integer getReviewNote()
    {
        return this.reviewNote;
    }

    //--- DATABASE MAPPING : CREATION ( TIMESTAMP ) 
    public void setCreation( Date creation )
    {
        this.creation = creation;
    }
    public Date getCreation()
    {
        return this.creation;
    }

    //--- DATABASE MAPPING : LAST_UPDATE ( TIMESTAMP ) 
    public void setLastUpdate( Date lastUpdate )
    {
        this.lastUpdate = lastUpdate;
    }
    public Date getLastUpdate()
    {
        return this.lastUpdate;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setBook( Book book )
    {
        this.book = book;
    }
    public Book getBook()
    {
        return this.book;
    }

    public void setCustomer( Customer customer )
    {
        this.customer = customer;
    }
    public Customer getCustomer()
    {
        return this.customer;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString()
    {
        StringBuffer sb = new StringBuffer(); 
        if ( compositePrimaryKey != null ) {  
            sb.append(compositePrimaryKey.toString());  
        }  
        else {  
            sb.append( "(null-key)" );  
        }  
        sb.append("|"); 
        sb.append(reviewNote); 
        sb.append( "|" ); 
        sb.append(creation); 
        sb.append( "|" ); 
        sb.append(lastUpdate); 
        return sb.toString(); 
		// reviewText is not in toString because it's a "long text" field
    }

}
