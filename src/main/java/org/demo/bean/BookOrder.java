/*
 * Java bean class for entity table BOOK_ORDER 
 * Created on 26 juin 2013 ( Time 12:07:22 )
 * Generated by Telosys Tools Generator ( version 2.0.5 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.demo.bean;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;

/**
 * Persistent class for entity stored in table "BOOK_ORDER"
 *
 * @author Telosys Tools Generator
 *
 */
@XmlRootElement  // JAXB annotation for REST Web Services
@XmlAccessorType(XmlAccessType.PROPERTY) // JAXB accessor = getter/setter pair
@Entity
@Table(name="BOOK_ORDER", schema="ROOT" )
// Define named queries here
// @NamedQueries ( {
//  @NamedQuery ( name="BookOrder.query1", query="SELECT x FROM BookOrder x WHERE  " ),
//  @NamedQuery ( name="BookOrder.query2", query="SELECT x FROM BookOrder x WHERE  " )
// } )
public class BookOrder implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="ID", nullable=false)
    private int        id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="SHOP_CODE", nullable=false, length=3)
    private String     shopCode     ;

    @Column(name="CUSTOMER_CODE", nullable=false, length=5)
    private String     customerCode ;

    @Column(name="EMPLOYEE_CODE", nullable=false, length=4)
    private String     employeeCode ;

    @Temporal(TemporalType.DATE)
    @Column(name="DATE")
    private Date       date         ;

    @Column(name="STATE")
    private Integer    state        ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public BookOrder()
    {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( int id )
    {
        this.id = id ;
    }
    public int getId()
    {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : SHOP_CODE ( VARCHAR ) 
    public void setShopCode( String shopCode )
    {
        this.shopCode = shopCode;
    }
    public String getShopCode()
    {
        return this.shopCode;
    }

    //--- DATABASE MAPPING : CUSTOMER_CODE ( VARCHAR ) 
    public void setCustomerCode( String customerCode )
    {
        this.customerCode = customerCode;
    }
    public String getCustomerCode()
    {
        return this.customerCode;
    }

    //--- DATABASE MAPPING : EMPLOYEE_CODE ( VARCHAR ) 
    public void setEmployeeCode( String employeeCode )
    {
        this.employeeCode = employeeCode;
    }
    public String getEmployeeCode()
    {
        return this.employeeCode;
    }

    //--- DATABASE MAPPING : DATE ( DATE ) 
    public void setDate( Date date )
    {
        this.date = date;
    }
    public Date getDate()
    {
        return this.date;
    }

    //--- DATABASE MAPPING : STATE ( INTEGER ) 
    public void setState( Integer state )
    {
        this.state = state;
    }
    public Integer getState()
    {
        return this.state;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString()
    {
        StringBuffer sb = new StringBuffer(); 
        sb.append(id); 
        sb.append("|"); 
        sb.append(shopCode); 
        sb.append( "|" ); 
        sb.append(customerCode); 
        sb.append( "|" ); 
        sb.append(employeeCode); 
        sb.append( "|" ); 
        sb.append(date); 
        sb.append( "|" ); 
        sb.append(state); 
        return sb.toString(); 
    }

}
