/*
 * Created on 2 juil. 2013 ( Time 09:44:49 )
 * Generated by Telosys Tools Generator ( version 2.0.5 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.demo.bean;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;


import java.util.List;
import javax.persistence.*;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 * Persistent class for entity stored in table "EMPLOYEE"
 *
 * @author Telosys Tools Generator
 *
 */
@XmlRootElement  // JAXB annotation for REST Web Services
@XmlAccessorType(XmlAccessType.PROPERTY) // JAXB accessor = getter/setter pair
@Entity
@Table(name="EMPLOYEE", schema="ROOT" )
// Define named queries here
// @NamedQueries ( {
//  @NamedQuery ( name="Employee.query1", query="SELECT x FROM Employee x WHERE  " ),
//  @NamedQuery ( name="Employee.query2", query="SELECT x FROM Employee x WHERE  " )
// } )
public class Employee implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="CODE", nullable=false, length=4)
    private String     code         ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="FIRST_NAME", length=40)
    private String     firstName    ;

    @Column(name="LAST_NAME", nullable=false, length=40)
    private String     lastName     ;

    @Column(name="MANAGER")
    private Short      manager      ;

    @Column(name="EMAIL", length=60)
    private String     email        ;

	// "shopCode" (column "SHOP_CODE") is not defined by itself because used as FK in a link 
	// "badgeNumber" (column "BADGE_NUMBER") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="employee", targetEntity=Shop.class)
    private List<Shop> listOfShop  ;

    @ManyToOne
    @JoinColumn(name="SHOP_CODE", referencedColumnName="CODE", insertable=false, updatable=false)
    private Shop       shop        ;

    @ManyToMany(targetEntity=Workgroup.class)
    @JoinTable(name="EMPLOYEE_GROUP", 
      joinColumns=@JoinColumn(name="EMPLOYEE_CODE", referencedColumnName="CODE"),
      inverseJoinColumns=@JoinColumn(name="GROUP_ID", referencedColumnName="ID")
     ) 

    private List<Workgroup> listOfWorkgroup;

    @ManyToOne
    @JoinColumn(name="BADGE_NUMBER", referencedColumnName="BADGE_NUMBER", insertable=false, updatable=false)
    private Badge      badge       ;

    @OneToMany(mappedBy="employee", targetEntity=BookOrder.class)
    private List<BookOrder> listOfBookOrder;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public Employee()
    {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setCode( String code )
    {
        this.code = code ;
    }
    public String getCode()
    {
        return this.code;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : FIRST_NAME ( VARCHAR ) 
    public void setFirstName( String firstName )
    {
        this.firstName = firstName;
    }
    public String getFirstName()
    {
        return this.firstName;
    }

    //--- DATABASE MAPPING : LAST_NAME ( VARCHAR ) 
    public void setLastName( String lastName )
    {
        this.lastName = lastName;
    }
    public String getLastName()
    {
        return this.lastName;
    }

    //--- DATABASE MAPPING : MANAGER ( SMALLINT ) 
    public void setManager( Short manager )
    {
        this.manager = manager;
    }
    public Short getManager()
    {
        return this.manager;
    }

    //--- DATABASE MAPPING : EMAIL ( VARCHAR ) 
    public void setEmail( String email )
    {
        this.email = email;
    }
    public String getEmail()
    {
        return this.email;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    @XmlTransient
    public void setListOfShop( List<Shop> listOfShop )
    {
        this.listOfShop = listOfShop;
    }
    public List<Shop> getListOfShop()
    {
        return this.listOfShop;
    }

    public void setShop( Shop shop )
    {
        this.shop = shop;
    }
    public Shop getShop()
    {
        return this.shop;
    }

    @XmlTransient
    public void setListOfWorkgroup( List<Workgroup> listOfWorkgroup )
    {
        this.listOfWorkgroup = listOfWorkgroup;
    }
    public List<Workgroup> getListOfWorkgroup()
    {
        return this.listOfWorkgroup;
    }

    public void setBadge( Badge badge )
    {
        this.badge = badge;
    }
    public Badge getBadge()
    {
        return this.badge;
    }

    @XmlTransient
    public void setListOfBookOrder( List<BookOrder> listOfBookOrder )
    {
        this.listOfBookOrder = listOfBookOrder;
    }
    public List<BookOrder> getListOfBookOrder()
    {
        return this.listOfBookOrder;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString()
    {
        StringBuffer sb = new StringBuffer(); 
        sb.append(code); 
        sb.append("|"); 
        sb.append(firstName); 
        sb.append( "|" ); 
        sb.append(lastName); 
        sb.append( "|" ); 
        sb.append(manager); 
        sb.append( "|" ); 
        sb.append(email); 
        return sb.toString(); 
    }

}
