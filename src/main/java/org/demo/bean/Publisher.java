/*
 * Java bean class for entity table PUBLISHER 
 * Created on 26 juin 2013 ( Time 12:07:22 )
 * Generated by Telosys Tools Generator ( version 2.0.5 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.demo.bean;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;


import javax.persistence.*;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;

/**
 * Persistent class for entity stored in table "PUBLISHER"
 *
 * @author Telosys Tools Generator
 *
 */
@XmlRootElement  // JAXB annotation for REST Web Services
@XmlAccessorType(XmlAccessType.PROPERTY) // JAXB accessor = getter/setter pair
@Entity
@Table(name="PUBLISHER", schema="ROOT" )
// Define named queries here
// @NamedQueries ( {
//  @NamedQuery ( name="Publisher.query1", query="SELECT x FROM Publisher x WHERE  " ),
//  @NamedQuery ( name="Publisher.query2", query="SELECT x FROM Publisher x WHERE  " )
// } )
public class Publisher implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="CODE", nullable=false)
    private int        code         ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="COUNTRY_CODE", nullable=false, length=2)
    private String     countryCode  ;

    @Column(name="NAME", length=45)
    private String     name         ;

    @Column(name="EMAIL", length=45)
    private String     email        ;

    @Column(name="CONTACT", length=45)
    private String     contact      ;

    @Column(name="CITY", length=45)
    private String     city         ;

    @Column(name="ZIP_CODE")
    private Integer    zipCode      ;

    @Column(name="PHONE", length=14)
    private String     phone        ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public Publisher()
    {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setCode( int code )
    {
        this.code = code ;
    }
    public int getCode()
    {
        return this.code;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : COUNTRY_CODE ( VARCHAR ) 
    public void setCountryCode( String countryCode )
    {
        this.countryCode = countryCode;
    }
    public String getCountryCode()
    {
        return this.countryCode;
    }

    //--- DATABASE MAPPING : NAME ( VARCHAR ) 
    public void setName( String name )
    {
        this.name = name;
    }
    public String getName()
    {
        return this.name;
    }

    //--- DATABASE MAPPING : EMAIL ( VARCHAR ) 
    public void setEmail( String email )
    {
        this.email = email;
    }
    public String getEmail()
    {
        return this.email;
    }

    //--- DATABASE MAPPING : CONTACT ( VARCHAR ) 
    public void setContact( String contact )
    {
        this.contact = contact;
    }
    public String getContact()
    {
        return this.contact;
    }

    //--- DATABASE MAPPING : CITY ( VARCHAR ) 
    public void setCity( String city )
    {
        this.city = city;
    }
    public String getCity()
    {
        return this.city;
    }

    //--- DATABASE MAPPING : ZIP_CODE ( INTEGER ) 
    public void setZipCode( Integer zipCode )
    {
        this.zipCode = zipCode;
    }
    public Integer getZipCode()
    {
        return this.zipCode;
    }

    //--- DATABASE MAPPING : PHONE ( VARCHAR ) 
    public void setPhone( String phone )
    {
        this.phone = phone;
    }
    public String getPhone()
    {
        return this.phone;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString()
    {
        StringBuffer sb = new StringBuffer(); 
        sb.append(code); 
        sb.append("|"); 
        sb.append(countryCode); 
        sb.append( "|" ); 
        sb.append(name); 
        sb.append( "|" ); 
        sb.append(email); 
        sb.append( "|" ); 
        sb.append(contact); 
        sb.append( "|" ); 
        sb.append(city); 
        sb.append( "|" ); 
        sb.append(zipCode); 
        sb.append( "|" ); 
        sb.append(phone); 
        return sb.toString(); 
    }

}
