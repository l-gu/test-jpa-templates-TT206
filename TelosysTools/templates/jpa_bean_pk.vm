## ----------------------------------------------------------------------
## Macros 
## ----------------------------------------------------------------------
#macro( argumentsWithType $fields )
#set ( $count = 0 )
#set ( $args = "" )
#foreach( $field in $fields )
#set ( $count = $count + 1 )
#if ( $count > 1 )
#set ( $args = "$args, " )
#end
#set ( $args = "${args}${field.type} ${field.name}" )
#end
$args #end
## ----------------------------------------------------------------------
/*
 * Java class for composite primary key ${beanClass.sqlTable} 
 * Created on $today.date ( Time $today.time )
 * Generated by $generator.name ( version $generator.version )
 */
package ${target.javaPackageFromFolder($SRC)};

import java.io.Serializable;

#foreach( $import in $beanClass.importsForKeyFields )
import $import;
#end
#foreach( $import in $beanClass.importsJpa )
import $import;
#end

/**
 * Composite primary key for entity "${beanClass.name}" ( stored in table "${beanClass.sqlTable}" )
 *
 * @author Telosys Tools Generator
 *
 */
 @Embeddable
public class ${beanClass.name}Key implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY KEY ATTRIBUTES 
    //----------------------------------------------------------------------
#foreach( $field in $beanClass.keyAttributes )
$field.jpaAnnotationsEmbeddedID(4)
    private $field.formatedType(10) $field.formatedName(12) #if($field.hasInitialValue())= ${field.initialValue} #end;
    
#end

    //----------------------------------------------------------------------
    // CONSTRUCTORS
    //----------------------------------------------------------------------
    public ${beanClass.name}Key()
    {
        super();
    }

    public ${beanClass.name}Key( #argumentsWithType($beanClass.keyAttributes) )
    {
        super();
#foreach( $field in $beanClass.keyAttributes )
        this.$field.name = $field.name ;
#end
    }
    
    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR KEY FIELDS
    //----------------------------------------------------------------------
#foreach( $field in $beanClass.keyAttributes )
#if ( $field.databaseName ) 
#end
#if ( $field.setter )    public void ${field.setter}( $field.type value )
    {
        this.$field.name = value;
    }
#end
#if ( $field.getter )    public $field.type ${field.getter}()
    {
        return this.$field.name;
    }
#end

#end  

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString()
    {
		StringBuffer sb = new StringBuffer(); 
#set( $count = 0 )
#foreach( $field in $beanClass.keyAttributes )
#if( $count > 0 )
		sb.append("|"); 
#end
		sb.append($field.name); 
#set( $count = $count + 1 )
#end  
        return sb.toString();
    }

}
